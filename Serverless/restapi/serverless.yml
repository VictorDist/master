
service: restapi

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_TABLE: 'notes'
  iamRoleStatements:
    - Effect: Allow
      Action:
       - dynamodb.Query
       - dynamodb.Scan
       - dynamodb.GetItem
       - dynamodb.PutItem
       - dynamodb.UpdateItem
       - dynamodb.DeleteItem
       - dynamodb.Query
      Resource: "arn:aws:dynamodb:${opt:region,self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  getOne:
    handler: handler.getOne
    events:
      - http:
        path: notes/{id}
        method: get
        cors: true
  getAll:
    handler: handler.getAll
    events:
      - http:
        path: notes
        method: get
        cors: true

resources:
  Resources:
    NotesDynamoDbTable: #name of table
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
      KeySchema:
        - AttributeName: id
        - keyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: ${self:provider.environment.DYNAMODB_TABLE}

  custom:
    dynamodb:
      start:
        port: 8000
        inMemory: true
        migrate: true

plugins:
 - serverless-dynamodb-local
 - serverless-offline
